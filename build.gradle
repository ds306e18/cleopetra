/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.23.1'
}

sourceCompatibility = 11
targetCompatibility = 11

// Define the main class for the application
mainClassName = 'dk.aau.cs.ds306e18.tournament.Main'
version = '1.8.0'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:26.0-jre'

    // Using GSON for serializing objects for transfer and storage
    compile 'com.google.code.gson:gson:2.8.6'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    implementation('org.controlsfx:controlsfx:11.0.3') {
        exclude group: 'org.openjfx'
    }
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'CleoPetra'
    }

    // A lot of this stuff was borrowed from the example at https://github.com/beryx-gist/badass-jlink-example-richtextfx/blob/master/build.gradle
    jpackage {
        skipInstaller = false
        installerType = 'msi'
        icon = 'src/main/resources/cleopetra.ico'
        installerOptions = ['--win-menu', '--win-shortcut', '--win-dir-chooser', '--win-per-user-install',
        '--file-associations', 'src/main/resources/associations.properties',
        '--app-version', version]
    }
}

// Setup modules
sourceSets {
    main.resources.srcDirs = ['src/main/java']
    test.resources.srcDirs = ['src/test/java']
}

// Build a fat jar
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'dk.aau.cs.ds306e18.tournament.Main'
    }
    baseName = 'cleopetra'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
